{
  "meta": {
    "$_GET": [
      {
        "type": "number",
        "name": "id"
      },
      {
        "type": "text",
        "name": "sort"
      },
      {
        "type": "text",
        "name": "dir"
      }
    ]
  },
  "exec": {
    "steps": [
      "connections/db",
      {
        "name": "fetch_owned_products",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "db",
          "sql": {
            "type": "SELECT",
            "columns": [
              {
                "table": "owned_products",
                "column": "id"
              }
            ],
            "table": {
              "name": "owned_products"
            },
            "joins": [],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "owned_products.owned_by",
                  "field": "owned_products.owned_by",
                  "type": "string",
                  "operator": "equal",
                  "value": "{{$_GET.id}}",
                  "data": {
                    "table": "owned_products",
                    "column": "owned_by",
                    "type": "text"
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "query": "SELECT id\nFROM owned_products\nWHERE owned_by = :P1 /* {{$_GET.id}} */",
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{$_GET.id}}"
              }
            ]
          }
        },
        "output": true,
        "meta": [
          {
            "name": "id",
            "type": "text"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "fetch_reviews",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "db",
          "sql": {
            "type": "SELECT",
            "columns": [],
            "table": {
              "name": "reviews"
            },
            "joins": [],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "reviews.by_user",
                  "field": "reviews.by_user",
                  "type": "string",
                  "operator": "equal",
                  "value": "{{$_GET.id}}",
                  "data": {
                    "table": "reviews",
                    "column": "by_user",
                    "type": "text"
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "query": "SELECT *\nFROM reviews\nWHERE by_user = :P1 /* {{$_GET.id}} */",
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{$_GET.id}}"
              }
            ]
          }
        },
        "output": true,
        "meta": [
          {
            "name": "id",
            "type": "text"
          },
          {
            "name": "review_for_car",
            "type": "text"
          },
          {
            "name": "title",
            "type": "text"
          },
          {
            "name": "text",
            "type": "text"
          },
          {
            "name": "date",
            "type": "text"
          },
          {
            "name": "author",
            "type": "text"
          },
          {
            "name": "by_user",
            "type": "text"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "fetch_user_appointments",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "db",
          "sql": {
            "type": "SELECT",
            "columns": [],
            "table": {
              "name": "service_appointments"
            },
            "joins": [],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "service_appointments.for_user",
                  "field": "service_appointments.for_user",
                  "type": "string",
                  "operator": "equal",
                  "value": "{{$_GET.id}}",
                  "data": {
                    "table": "service_appointments",
                    "column": "for_user",
                    "type": "text"
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "query": "SELECT *\nFROM service_appointments\nWHERE for_user = :P1 /* {{$_GET.id}} */",
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{$_GET.id}}"
              }
            ]
          }
        },
        "output": true,
        "meta": [
          {
            "name": "id",
            "type": "text"
          },
          {
            "name": "for_user",
            "type": "text"
          },
          {
            "name": "type",
            "type": "text"
          },
          {
            "name": "duration",
            "type": "text"
          },
          {
            "name": "for_car",
            "type": "text"
          },
          {
            "name": "serv_hours_refk",
            "type": "text"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "fetch_service_hours",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "db",
          "sql": {
            "type": "SELECT",
            "columns": [],
            "table": {
              "name": "service_hours"
            },
            "joins": [],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "service_hours.id",
                  "field": "service_hours.id",
                  "type": "double",
                  "operator": "equal",
                  "value": "{{fetch_user_appointments[0].serv_hours_refk}}",
                  "data": {
                    "table": "service_hours",
                    "column": "id",
                    "type": "number"
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "query": "SELECT *\nFROM service_hours\nWHERE id = :P1 /* {{fetch_user_appointments[0].serv_hours_refk}} */",
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{fetch_user_appointments[0].serv_hours_refk}}"
              }
            ]
          }
        },
        "output": true,
        "meta": [
          {
            "name": "id",
            "type": "text"
          },
          {
            "name": "timeframe",
            "type": "text"
          },
          {
            "name": "date",
            "type": "text"
          },
          {
            "name": "no_appointments",
            "type": "text"
          },
          {
            "name": "max_appointments",
            "type": "text"
          },
          {
            "name": "for_users_ids",
            "type": "text"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{fetch_reviews[0].id.inRange(0, 100000000000000000)}}",
          "then": {
            "steps": {
              "name": "delete_reviews",
              "module": "dbupdater",
              "action": "delete",
              "options": {
                "connection": "db",
                "sql": {
                  "type": "delete",
                  "table": "reviews",
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "by_user",
                        "field": "by_user",
                        "type": "string",
                        "operator": "equal",
                        "value": "{{$_GET.id}}",
                        "data": {
                          "column": "by_user"
                        },
                        "operation": "="
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  },
                  "query": "DELETE\nFROM reviews\nWHERE by_user = :P1 /* {{$_GET.id}} */",
                  "params": [
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P1",
                      "value": "{{$_GET.id}}"
                    }
                  ]
                }
              },
              "meta": [
                {
                  "name": "affected",
                  "type": "number"
                }
              ]
            }
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{fetch_owned_products[0].id.inRange(1, 100000000000000000)}}",
          "then": {
            "steps": {
              "name": "delete_products",
              "module": "dbupdater",
              "action": "delete",
              "options": {
                "connection": "db",
                "sql": {
                  "type": "delete",
                  "table": "owned_products",
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "owned_by",
                        "field": "owned_by",
                        "type": "string",
                        "operator": "equal",
                        "value": "{{$_GET.id}}",
                        "data": {
                          "column": "owned_by"
                        },
                        "operation": "="
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  },
                  "query": "DELETE\nFROM owned_products\nWHERE owned_by = :P1 /* {{$_GET.id}} */",
                  "params": [
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P1",
                      "value": "{{$_GET.id}}"
                    }
                  ]
                }
              },
              "meta": [
                {
                  "name": "affected",
                  "type": "number"
                }
              ]
            }
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{fetch_user_appointments[0].id.inRange(1, 100000000000000000)}}",
          "then": {
            "steps": {
              "name": "delete_user_appointments",
              "module": "dbupdater",
              "action": "delete",
              "options": {
                "connection": "db",
                "sql": {
                  "type": "delete",
                  "table": "service_appointments",
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "for_user",
                        "field": "for_user",
                        "type": "string",
                        "operator": "equal",
                        "value": "{{$_GET.id}}",
                        "data": {
                          "column": "for_user"
                        },
                        "operation": "="
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  },
                  "query": "DELETE\nFROM service_appointments\nWHERE for_user = :P1 /* {{$_GET.id}} */",
                  "params": [
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P1",
                      "value": "{{$_GET.id}}"
                    }
                  ]
                }
              },
              "meta": [
                {
                  "name": "affected",
                  "type": "number"
                }
              ]
            }
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{fetch_service_hours[0].id.inRange(1, 100000000000000000)}}",
          "then": {
            "steps": [
              {
                "name": "endTime",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": "{{fetch_service_hours[0].timeframe.dateAdd('hours', fetch_user_appointments[0].duration.toNumber()).formatDate('HH:mm:ss')}}"
                },
                "outputType": "time"
              },
              {
                "name": "update_serv_hours",
                "module": "dbupdater",
                "action": "custom",
                "options": {
                  "connection": "db",
                  "sql": {
                    "query": "UPDATE service_hours\nSET no_appointments = no_appointments - 1\nWHERE date = :P1 AND (timeframe >= :P2 AND timeframe <= :P3)",
                    "params": [
                      {
                        "name": ":P1",
                        "value": "{{fetch_service_hours[0].date}}",
                        "test": "9/10/2020"
                      },
                      {
                        "name": ":P2",
                        "value": "{{fetch_service_hours[0].timeframe}}",
                        "test": "8:00:00"
                      },
                      {
                        "name": ":P3",
                        "value": "{{endTime}}",
                        "test": "12:00:00"
                      }
                    ]
                  }
                },
                "meta": [],
                "outputType": "array",
                "output": false
              }
            ]
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "delete_account",
        "module": "dbupdater",
        "action": "delete",
        "options": {
          "connection": "db",
          "sql": {
            "type": "delete",
            "table": "users",
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "id",
                  "field": "id",
                  "type": "string",
                  "operator": "equal",
                  "value": "{{$_GET.id}}",
                  "data": {
                    "column": "id"
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "query": "DELETE\nFROM users\nWHERE id = :P1 /* {{$_GET.id}} */",
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{$_GET.id}}"
              }
            ]
          }
        },
        "meta": [
          {
            "name": "affected",
            "type": "number"
          }
        ]
      }
    ]
  }
}